"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = formatDate;
exports.getDelta = getDelta;

var _moment = _interopRequireDefault(require("moment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function formatDate(toDate, targetFormatMask, sourceFormatMask) {
  // to prevent from returning negative duration
  var countdownMillisecond = Math.max(0, getDelta(toDate, sourceFormatMask));

  var duration = _moment["default"].duration(countdownMillisecond);

  var finalTargetFormatMask = editTargetFormatMask(duration, targetFormatMask);
  var countdownString = (0, _moment["default"])(duration._data).format(finalTargetFormatMask);
  return [countdownMillisecond, countdownString];
}

function getDelta(toDate, sourceFormatMask) {
  if (!_moment["default"].isMoment(toDate)) {
    var convert = _moment["default"].isDate(toDate) ? (0, _moment["default"])(toDate) : (0, _moment["default"])(toDate, sourceFormatMask);
    return convert.diff((0, _moment["default"])());
  }

  return toDate.diff((0, _moment["default"])());
}

function editTargetFormatMask(duration, targetFormatMask) {
  var changeDate = [];
  if (duration.months() === 0) changeDate.push('M');
  if (duration.days() === 0) changeDate.push('D');
  return changeDate.reduce(function (acc, _char) {
    var charCount = acc.split('').filter(function (tfm) {
      return tfm === _char;
    }).length;
    var charBefore = generateString(_char, charCount);
    var charAfter = "[".concat(generateString('0', charCount), "]");
    return acc.replace(charBefore, charAfter);
  }, targetFormatMask);
}

function generateString(character, count) {
  return Array(count).fill(character).join('');
}